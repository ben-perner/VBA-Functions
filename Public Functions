Option Explicit

Public Function Convert_Col_Letter_To_Col_Number(col_letter As String)

'purpose: convert a column letter to a column number

Convert_Col_Letter_To_Col_Number = Range(col_letter & 1).Column

End Function

Public Function Convert_Col_Number_To_Col_Letter(col_number As Long)

'purpose: convert a column number to a column letter

Convert_Col_Number_To_Col_Letter = Split(Cells(1, col_number).Address, "$")(1)

End Function

Public Function Find_Last_Row(Worksheet_Name As String, Optional Column_Number As Long)

'code adapted from https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-excel-with-vba

Dim LastRow As Long
Dim TotalRowCount As Long

'Case 1: Find the Last Row for the given Column
If Column_Number > 0 And IsNumeric(Column_Number) Then

    With Sheets(Worksheet_Name)
        TotalRowCount = .Rows.Count
        LastRow = .Cells(TotalRowCount, Column_Number).End(xlUp).Row
    End With

Else:

    'Case 2: Find the Global Last Row in a Worksheet
    With Sheets(Worksheet_Name)
        If Application.WorksheetFunction.CountA(.Cells) <> 0 Then
      
            LastRow = .Cells.Find(What:="*", After:=.Range("A1"), LookAt:=xlPart, LookIn:=xlFormulas, SearchOrder:=xlByRows, SearchDirection:=xlPrevious, MatchCase:=False).Row
        
        Else:
        
            LastRow = 1
          
        End If
    End With

End If

Find_Last_Row = LastRow

End Function

Public Function Check_If_Worksheet_Exists(shtName As String, Optional wb As Workbook) As Boolean

'purpose: check and see if a worksheet exists with a specified name
Dim sht As Worksheet

If wb Is Nothing Then Set wb = ThisWorkbook

On Error Resume Next
    Set sht = wb.Sheets(shtName)
On Error GoTo 0

worksheetexists = Not sht Is Nothing

End Function

Public Function IsIn(strKeyword As String, strText As String)

If UCase(strText) Like "*" & UCase(strKeyword) & "*" Then IsIn = True Else IsIn = False
    
End Function
